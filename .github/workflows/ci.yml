name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Backend linting
      - name: Install Backend Dependencies
        working-directory: backend
        run: npm ci
      
      - name: Backend Lint
        working-directory: backend
        run: npm run lint

      # Frontend linting
      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Frontend Lint
        working-directory: frontend
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: library_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Backend tests
      - name: Install Backend Dependencies
        working-directory: backend
        run: npm ci
      
      - name: Generate Prisma Client
        working-directory: backend
        run: npx prisma generate
      
      - name: Run Migrations
        working-directory: backend
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/library_test_db
      
      - name: Backend Tests
        working-directory: backend
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/library_test_db
          NODE_ENV: test
          JWT_SECRET: test_secret

      # Frontend tests
      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Frontend Tests
        working-directory: frontend
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Build frontend
      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build Frontend
        working-directory: frontend
        run: npm run build

    # Add test coverage reporting here later